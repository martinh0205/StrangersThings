{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nconst makeHeaders = token => {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (token) {\n    headers[\"Authorization\"] = \"Bearer ${token}\";\n  }\n  return headers;\n};\nconst callAPI = async (endpointPath, _ref) => {\n  let {\n    method,\n    body,\n    token\n  } = _ref;\n  const options = {\n    method: method || \"GET\",\n    headers: makeHeaders()\n  };\n  const response = await fetch(`${BASEURL}${endpointPath}`);\n};\nexport const fetchPosts = async token => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const {\n      data\n    } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\n\n/*\nexport const fetchPosts = async (token) => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const { data } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\n*/\n\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/register`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log(\"RESPONSE------>\", response);\n    const data = await response.json();\n    console.log(\"------------data------------\", data);\n    return data;\n  } catch (error) {\n    console.error(\"There was an error registering the user\", error);\n  }\n};\nexport const fetchUser = async token => {\n  try {\n    const response = await fetch(`${BASEURL}/users/me`, {\n      headers: makeHeaders(token)\n    });\n    console.log(\"USER RESP BODY ------------>\", response);\n    const {\n      data\n    } = await response.json();\n    console.log(\"USER DATA ----->\", data);\n    return data;\n  } catch {\n    console.log(error);\n  }\n};\nexport const createPost = async () => {};","map":{"version":3,"names":["BASEURL","makeHeaders","token","headers","callAPI","endpointPath","method","body","options","response","fetch","fetchPosts","console","log","data","json","posts","error","registerUser","username","password","JSON","stringify","user","fetchUser","createPost"],"sources":["/Users/martinhampton/Documents/course_work/StrangersThings/src/api/api.js"],"sourcesContent":["const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\n\nconst makeHeaders = (token) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = \"Bearer ${token}\";\n  }\n  return headers;\n};\n\nconst callAPI = async (endpointPath, { method, body, token }) => {\n  const options = {\n    method: method || \"GET\",\n    headers: makeHeaders(),\n  };\n\n  const response = await fetch(`${BASEURL}${endpointPath}`);\n};\n\nexport const fetchPosts = async (token) => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const { data } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\n\n/*\nexport const fetchPosts = async (token) => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const { data } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\n*/\n\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/register`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n        },\n      }),\n    });\n    console.log(\"RESPONSE------>\", response);\n    const data = await response.json();\n    console.log(\"------------data------------\", data);\n    return data;\n  } catch (error) {\n    console.error(\"There was an error registering the user\", error);\n  }\n};\n\nexport const fetchUser = async (token) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/me`, {\n      headers: makeHeaders(token),\n    });\n    console.log(\"USER RESP BODY ------------>\", response);\n    const { data } = await response.json();\n    console.log(\"USER DATA ----->\", data);\n    return data;\n  } catch {\n    console.log(error);\n  }\n};\n\nexport const createPost = async () => {};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAA+D;AAE/E,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EAED,IAAID,KAAK,EAAE;IACTC,OAAO,CAAC,eAAe,CAAC,GAAG,iBAAiB;EAC9C;EACA,OAAOA,OAAO;AAChB,CAAC;AAED,MAAMC,OAAO,GAAG,OAAOC,YAAY,WAA8B;EAAA,IAA5B;IAAEC,MAAM;IAAEC,IAAI;IAAEL;EAAM,CAAC;EAC1D,MAAMM,OAAO,GAAG;IACdF,MAAM,EAAEA,MAAM,IAAI,KAAK;IACvBH,OAAO,EAAEF,WAAW;EACtB,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,GAAEK,YAAa,EAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOT,KAAK,IAAK;EACzC,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,QAAO,CAAC;IAChDY,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,QAAQ,CAAC;IAC7C,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IACtCH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,IAAI,CAACE,KAAK,CAAC;IACvC,OAAOF,IAAI,CAACE,KAAK;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,mCAAmC,CAAC;EACpD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,iBAAgB,EAAE;MACxDM,MAAM,EAAE,MAAM;MACdH,OAAO,EAAEF,WAAW,EAAE;MACtBM,IAAI,EAAEc,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJJ,QAAQ;UACRC;QACF;MACF,CAAC;IACH,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,QAAQ,CAAC;IACxC,MAAMK,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IAClCH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,IAAI,CAAC;IACjD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOtB,KAAK,IAAK;EACxC,IAAI;IACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,WAAU,EAAE;MAClDG,OAAO,EAAEF,WAAW,CAACC,KAAK;IAC5B,CAAC,CAAC;IACFU,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC;IACrD,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IACtCH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,IAAI,CAAC;IACrC,OAAOA,IAAI;EACb,CAAC,CAAC,MAAM;IACNF,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module"}