{"ast":null,"code":"var _jsxFileName = \"/Users/martinhampton/Documents/course_work/StrangersThings/src/components/PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetail = props => {\n  _s();\n  const {\n    token,\n    posts,\n    getPosts,\n    username\n  } = props;\n  const {\n    postId\n  } = useParams();\n  const [commentText, setCommentText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const singlePost = posts.find(onePost => {\n    const foundPost = onePost._id == postId;\n    return foundPost;\n  });\n  console.log(singlePost);\n  console.log(\"post detail username\", username, singlePost);\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    const {\n      success,\n      error,\n      content\n    } = await addComment(token, postId, commentText);\n    if (success) {\n      console.log(\"we succesfully added a comment\");\n      setCommentText(\"\");\n      await getPosts();\n    } else {\n      setErrorMessage(error);\n      console.log(\"failed to add a comment\");\n    }\n  };\n  if (singlePost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left floated aligned header\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: singlePost.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: singlePost.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center aligned extra content\",\n            children: singlePost.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center aligned extra content\",\n            children: singlePost.author.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"center aligned extra content\",\n            children: singlePost.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"list\",\n              className: \"ui divided relaxed list\",\n              style: {\n                color: \"#444\",\n                clear: \"both\"\n              },\n              children: singlePost.messages.map(messages => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  role: \"listitem\",\n                  className: \"item\",\n                  children: messages.fromUser.username !== username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: [messages.fromUser.username, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"content\",\n                      children: messages.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : null\n                }, messages._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"comment-form\",\n              onSubmit: handleOnSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"New Comment\",\n                value: commentText,\n                onChange: event => {\n                  setCommentText(event.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\",\n                  backgroundColor: \"pink\"\n                },\n                children: [\"Operation Failed \", errorMessage, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(PostDetail, \"8GLmEAfwd/tJiOQXe1Z4sku3IlA=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useParams","addComment","PostDetail","props","token","posts","getPosts","username","postId","commentText","setCommentText","errorMessage","setErrorMessage","singlePost","find","onePost","foundPost","_id","console","log","handleOnSubmit","event","preventDefault","success","error","content","title","description","price","author","location","color","clear","messages","map","fromUser","target","value","backgroundColor"],"sources":["/Users/martinhampton/Documents/course_work/StrangersThings/src/components/PostDetail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../api/api\";\n\nconst PostDetail = (props) => {\n  const { token, posts, getPosts, username } = props;\n  const { postId } = useParams();\n  const [commentText, setCommentText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const singlePost = posts.find((onePost) => {\n    const foundPost = onePost._id == postId;\n    return foundPost;\n  });\n\n  console.log(singlePost);\n  console.log(\"post detail username\", username, singlePost);\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    const { success, error, content } = await addComment(\n      token,\n      postId,\n      commentText\n    );\n\n    if (success) {\n      console.log(\"we succesfully added a comment\");\n      setCommentText(\"\");\n      await getPosts();\n    } else {\n      setErrorMessage(error);\n      console.log(\"failed to add a comment\");\n    }\n  };\n\n  if (singlePost) {\n    return (\n      <div className=\"posts-container\">\n        <div className=\"ui card\">\n          <div className=\"content\">\n            <div className=\"left floated aligned header\">\n              <h1>{singlePost.title}</h1>\n            </div>\n\n            <p className=\"description\">{singlePost.description}</p>\n\n            <p className=\"center aligned extra content\">{singlePost.price}</p>\n            <p className=\"center aligned extra content\">\n              {singlePost.author.username}\n            </p>\n            <p className=\"center aligned extra content\">\n              {singlePost.location}\n            </p>\n            <>\n              <div\n                role=\"list\"\n                className=\"ui divided relaxed list\"\n                style={{ color: \"#444\", clear: \"both\" }}\n              >\n                {singlePost.messages.map((messages) => {\n                  return (\n                    <div role=\"listitem\" className=\"item\" key={messages._id}>\n                      {messages.fromUser.username !== username ? (\n                        <>\n                          <b>{messages.fromUser.username} </b>\n                          <p className=\"content\">{messages.content}</p>\n                        </>\n                      ) : null}\n                    </div>\n                  );\n                })}\n              </div>\n              <form className=\"comment-form\" onSubmit={handleOnSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"New Comment\"\n                  value={commentText}\n                  onChange={(event) => {\n                    setCommentText(event.target.value);\n                  }}\n                ></input>\n                <button type=\"submit\">Send</button>\n                {errorMessage ? (\n                  <p style={{ color: \"red\", backgroundColor: \"pink\" }}>\n                    Operation Failed {errorMessage}{\" \"}\n                  </p>\n                ) : null}\n              </form>\n            </>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <p>Loading...</p>;\n  }\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}