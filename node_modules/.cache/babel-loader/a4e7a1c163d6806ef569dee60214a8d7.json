{"ast":null,"code":"var _jsxFileName = \"/Users/martinhampton/Documents/course_work/StrangersThings/src/components/PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../api/api\";\nimport \"./Posts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostDetail = props => {\n  _s();\n  const {\n    token,\n    posts,\n    getPosts,\n    username\n  } = props;\n  const {\n    postId\n  } = useParams();\n  const [commentText, setCommentText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const singlePost = posts.find(onePost => {\n    const foundPost = onePost._id == postId;\n    return foundPost;\n  });\n  console.log(singlePost);\n  console.log(\"post detail username\", username, singlePost);\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    const {\n      success,\n      error,\n      content\n    } = await addComment(token, postId, commentText);\n    if (success) {\n      console.log(\"we succesfully added a comment\");\n      setCommentText(\"\");\n      await getPosts();\n    } else {\n      setErrorMessage(error);\n      console.log(\"failed to add a comment\");\n    }\n  };\n  if (singlePost) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"posts-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui fluid card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left floated aligned header\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: singlePost.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: singlePost.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"center aligned extra content\",\n              children: [\"Price: \", singlePost.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"center aligned extra content\",\n              children: [\"By: \", singlePost.author.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"center aligned extra content\",\n              children: [\"Location:\", singlePost.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                role: \"list\",\n                className: \"ui divided relaxed list\",\n                style: {\n                  color: \"#444\",\n                  clear: \"both\"\n                },\n                children: singlePost.messages.map(messages => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    role: \"listitem\",\n                    className: \"item\",\n                    children: messages.fromUser.username !== username ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        children: [messages.fromUser.username, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 71,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"content\",\n                        children: messages.content\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true) : null\n                  }, messages._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"ui comments\",\n                onSubmit: handleOnSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"ui diving header\",\n                  children: \"Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ui reply\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"New Comment\",\n                  value: commentText,\n                  onChange: event => {\n                    setCommentText(event.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this), errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"red\",\n                    backgroundColor: \"pink\"\n                  },\n                  children: [\"Operation Failed \", errorMessage, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(PostDetail, \"8GLmEAfwd/tJiOQXe1Z4sku3IlA=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useParams","addComment","PostDetail","props","token","posts","getPosts","username","postId","commentText","setCommentText","errorMessage","setErrorMessage","singlePost","find","onePost","foundPost","_id","console","log","handleOnSubmit","event","preventDefault","success","error","content","title","description","price","author","location","color","clear","messages","map","fromUser","target","value","backgroundColor"],"sources":["/Users/martinhampton/Documents/course_work/StrangersThings/src/components/PostDetail.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment } from \"../api/api\";\nimport \"./Posts.css\";\n\nconst PostDetail = (props) => {\n  const { token, posts, getPosts, username } = props;\n  const { postId } = useParams();\n  const [commentText, setCommentText] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const singlePost = posts.find((onePost) => {\n    const foundPost = onePost._id == postId;\n    return foundPost;\n  });\n\n  console.log(singlePost);\n  console.log(\"post detail username\", username, singlePost);\n\n  const handleOnSubmit = async (event) => {\n    event.preventDefault();\n    const { success, error, content } = await addComment(\n      token,\n      postId,\n      commentText\n    );\n\n    if (success) {\n      console.log(\"we succesfully added a comment\");\n      setCommentText(\"\");\n      await getPosts();\n    } else {\n      setErrorMessage(error);\n      console.log(\"failed to add a comment\");\n    }\n  };\n\n  if (singlePost) {\n    return (\n      <div className=\"container\">\n        <div className=\"posts-container\">\n          <div className=\"ui fluid card\">\n            <div className=\"content\">\n              <div className=\"left floated aligned header\">\n                <h1>{singlePost.title}</h1>\n              </div>\n\n              <p className=\"description\">{singlePost.description}</p>\n\n              <p className=\"center aligned extra content\">\n                Price: {singlePost.price}\n              </p>\n              <p className=\"center aligned extra content\">\n                By: {singlePost.author.username}\n              </p>\n              <p className=\"center aligned extra content\">\n                Location:{singlePost.location}\n              </p>\n\n              <>\n                <div\n                  role=\"list\"\n                  className=\"ui divided relaxed list\"\n                  style={{ color: \"#444\", clear: \"both\" }}\n                >\n                  {singlePost.messages.map((messages) => {\n                    return (\n                      <div role=\"listitem\" className=\"item\" key={messages._id}>\n                        {messages.fromUser.username !== username ? (\n                          <>\n                            <b>{messages.fromUser.username} </b>\n                            <p className=\"content\">{messages.content}</p>\n                          </>\n                        ) : null}\n                      </div>\n                    );\n                  })}\n                </div>\n                {token ? (\n                  <form className=\"ui comments\" onSubmit={handleOnSubmit}>\n                    <h3 className=\"ui diving header\">Comments</h3>\n                    <div className=\"ui reply\"></div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"New Comment\"\n                      value={commentText}\n                      onChange={(event) => {\n                        setCommentText(event.target.value);\n                      }}\n                    ></input>\n                    <button type=\"submit\">Send</button>\n                    {errorMessage ? (\n                      <p style={{ color: \"red\", backgroundColor: \"pink\" }}>\n                        Operation Failed {errorMessage}{\" \"}\n                      </p>\n                    ) : null}\n                  </form>\n                ) : null}\n              </>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <p>Loading...</p>;\n  }\n};\n\nexport default PostDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}