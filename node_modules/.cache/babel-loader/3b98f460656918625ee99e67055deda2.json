{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nconst makeHeaders = token => {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (token) {\n    headers[\"Authorization\"] = \"Bearer ${token}\";\n  }\n  return headers;\n};\nconst callAPI = async function (endpointPath) {\n  let defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    token,\n    method,\n    body\n  } = defaultOptions;\n  const options = {\n    headers: makeHeaders(token)\n  };\n  if (method) {\n    headers: makeHeaders(token);\n  }\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const {\n      data\n    } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log(\"RESPONSE------>\", response);\n    const data = await response.json();\n    console.log(\"------------data------------\", data);\n    return data;\n  } catch (error) {\n    console.error(\"There was an error registering the user\", error);\n  }\n};\nexport const fetchUser = async token => {\n  try {\n    const response = await fetch(`${BASEURL}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"USER RESP BODY ------------>\", response);\n    const {\n      data\n    } = await response.json();\n    console.log(\"USER DATA ----->\", data);\n    return data;\n  } catch {\n    console.log(error);\n  }\n};\nexport const createPost = async () => {};","map":{"version":3,"names":["BASEURL","makeHeaders","token","headers","callAPI","endpointPath","defaultOptions","method","body","options","fetchPosts","response","fetch","console","log","data","json","posts","error","registerUser","username","password","JSON","stringify","user","fetchUser","Authorization","createPost"],"sources":["/Users/martinhampton/Documents/course_work/StrangersThings/src/api/api.js"],"sourcesContent":["const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\n\nconst makeHeaders = (token) => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (token) {\n    headers[\"Authorization\"] = \"Bearer ${token}\";\n  }\n  return headers;\n};\n\nconst callAPI = async (endpointPath, defaultOptions = {}) => {\n  const { token, method, body } = defaultOptions;\n\n  const options = {\n    headers: makeHeaders(token),\n  };\n\n  if (method) {\n    headers: makeHeaders(token);\n  }\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"THIS IS THE RESPONSE\", response);\n    const { data } = await response.json();\n    console.log(\"THIS IS DATA\", data.posts);\n    return data.posts;\n  } catch (error) {\n    console.error(\"there was an error fetching posts\");\n  }\n};\n\nexport const registerUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n        },\n      }),\n    });\n    console.log(\"RESPONSE------>\", response);\n    const data = await response.json();\n    console.log(\"------------data------------\", data);\n    return data;\n  } catch (error) {\n    console.error(\"There was an error registering the user\", error);\n  }\n};\n\nexport const fetchUser = async (token) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(\"USER RESP BODY ------------>\", response);\n    const { data } = await response.json();\n    console.log(\"USER DATA ----->\", data);\n    return data;\n  } catch {\n    console.log(error);\n  }\n};\n\nexport const createPost = async () => {};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAA+D;AAE/E,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;EAED,IAAID,KAAK,EAAE;IACTC,OAAO,CAAC,eAAe,CAAC,GAAG,iBAAiB;EAC9C;EACA,OAAOA,OAAO;AAChB,CAAC;AAED,MAAMC,OAAO,GAAG,gBAAOC,YAAY,EAA0B;EAAA,IAAxBC,cAAc,uEAAG,CAAC,CAAC;EACtD,MAAM;IAAEJ,KAAK;IAAEK,MAAM;IAAEC;EAAK,CAAC,GAAGF,cAAc;EAE9C,MAAMG,OAAO,GAAG;IACdN,OAAO,EAAEF,WAAW,CAACC,KAAK;EAC5B,CAAC;EAED,IAAIK,MAAM,EAAE;IACVJ,OAAO,EAAEF,WAAW,CAACC,KAAK,CAAC;EAC7B;AACF,CAAC;AACD,OAAO,MAAMQ,UAAU,GAAG,YAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,QAAO,CAAC;IAChDa,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAAC;IAC7C,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACtCH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,IAAI,CAACE,KAAK,CAAC;IACvC,OAAOF,IAAI,CAACE,KAAK;EACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,mCAAmC,CAAC;EACpD;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,iBAAgB,EAAE;MACxDO,MAAM,EAAE,MAAM;MACdJ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDK,IAAI,EAAEc,IAAI,CAACC,SAAS,CAAC;QACnBC,IAAI,EAAE;UACJJ,QAAQ;UACRC;QACF;MACF,CAAC;IACH,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC;IACxC,MAAMI,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClCH,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,IAAI,CAAC;IACjD,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMO,SAAS,GAAG,MAAOvB,KAAK,IAAK;EACxC,IAAI;IACF,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,OAAQ,WAAU,EAAE;MAClDG,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCuB,aAAa,EAAG,UAASxB,KAAM;MACjC;IACF,CAAC,CAAC;IACFW,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAAC;IACrD,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACtCH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,IAAI,CAAC;IACrC,OAAOA,IAAI;EACb,CAAC,CAAC,MAAM;IACNF,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module"}